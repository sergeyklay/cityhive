[project]
name = "cityhive"
version = "0.1.0"
description = "Experimental aiohttp microservice for urban beehive management and technology exploration."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiohttp-jinja2>=1.6",
    "aiohttp[speedups]>=3.12.7",
    "alembic[tz]>=1.16.1",
    "asyncpg>=0.30.0",
    "geoalchemy2>=0.17.1",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    "python-dotenv>=1.1.0",
    "pyyaml>=6.0.2",
    "sqlalchemy[asyncio]>=2.0.41",
    "trafaret-config>=2.0.2",
]

[dependency-groups]
dev = [
    "debugpy>=1.8.14",
    "fastmcp>=2.7.0",
    "mcp[cli]>=1.9.3",
    "pre-commit>=4.2.0",
    "ruff>=0.11.12",
]
testing = [
    "coverage[toml]>=7.8.2",
    "pytest>=8.4.0",
    "pytest-aiohttp>=1.1.0",
    "pytest-asyncio>=1.0.0",
    "pytest-mock>=3.14.1",
]

[tool.pytest.ini_options]
addopts = "--verbose --durations=25 --no-header"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore:cannot collect test class.*because it has a __init__ constructor:pytest.PytestCollectionWarning",
]

[tool.coverage.report]
# Set the number of decimal places in coverage percentage
precision = 2

# Show lines that were not executed
show_missing = true

# Skip empty files
skip_empty = true

# Exclude lines from coverage report
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]

[tool.coverage.html]
# Directory for the HTML format report
directory = "coverage/html"

[tool.coverage.lcov]
# Filename for the LCOV format report
output = "coverage/lcov/coverage.lcov"

[tool.coverage.xml]
# Filename for the XML format report
output = "coverage/xml/coverage.xml"

[tool.coverage.run]
# Enable branch coverage (default: False)
branch = true

# Run tests in parallel (useful when using CI/CD)
parallel = true

# Filename for storing coverage data
data_file = "coverage/.coverage"

# Source code directories to include in the coverage report
source = ["cityhive"]

# Omit specified files or directories from the report
omit = [
    "__init__.py",
    "*/__pycache__/*",
    "*/.venv/*",
    "*/build/*",
    "*/coverage/*",
    "*/pytest_cache/*",
    "*/tests/*",
]

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
extend-select = [
    "I",      # All imports
    "E",      # All errors
    "W",      # All warnings
    "F",      # All false positives
    "C",      # All complexity
    "Q",      # All quality
    "UP006",  # Enforcing the use of PEP 585 syntax
    "UP007",  # Enforcing the use of PEP 604 syntax
    "RET505", # Unnecessary `else` after `return` statement
    "B006",   # Do not use mutable data structures for argument defaults
    "B904",   # Use `raise ... from err` instead of `raise ...`
    "B905",   # Specify `strict` when using `zip()`
    "G004",   # Don't use f-strings for string interpolation in logging
]

ignore = [
    "E402", # module level import not at top of file
]

[tool.ruff.lint.isort]
known-first-party = ["cityhive"]
